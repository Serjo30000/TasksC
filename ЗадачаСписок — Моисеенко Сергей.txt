#include <iostream>
#include <stdlib.h>

using namespace std;
//Автор: Моисеенко Сергей ИФСТ-15 Дата: 07.03.2022
typedef struct List {//Создание структуры список
    int index[100];//Индекс элемента
    int value[100];//Значение элемента
} List;

List* arrToList(int *arr,int *arr1, int n,int &a){//Функция создания списка
    List *l=new List;//Создание нового списка
    for (int i=0;i<n;i++){//Цикл заполнения элементов и индексов списка
        if (a==n-1){//Условие для последнего элемента
            l->index[i]=a;//Индекс элемента
            a=arr[i];//Переход на следующий индекс
            l->value[l->index[i]]=arr[i];//Добавление нового значения
        }
        else{//Условие для остальных элементов
            l->index[i]=a;//Индекс элемента
            a=arr1[i];//Переход на следующий индекс
            l->value[l->index[i]]=arr[i];//Добавление нового значения
        }
    }
    return l;//Вернуть список
}

List* addToLists(List *l, int &n){//Функция добавления элемента в начало
    int g=0,k=0;//Элементы для замены
    for (int i=0;i<n;i++){//Цикл для добавления нового элемента в начало
        if (i==0){//Добавление нового элемента в начало
            int n1=5;//Новый элемент
            n++;//Увеличение размера списка
            l->index[n-1]=n-1;//Добавление нового индекса
            g=l->value[l->index[i]];//Сохранение старого индекса
            l->value[l->index[i]]=n1;//Изменение индекса
        }
        else{
            k=l->value[l->index[i]];//Сохранение старого индекса
            l->value[l->index[i]]=g;//Добавление нового индекса
            g=k;//Сохранение старого индекса
        }
    }
    return l;//Вернуть список
}

List* addToListf(List *l, int &n){//Функция добавления элемента в конец
    int g=0,k=0;//Элементы для замены
    n++;
    for (int i=0;i<n;i++){//Цикл для добавления нового элемента в конец
        if (i==n-1){//Добавление нового элемента в конец
            int n2=9;//Новый элемент
            l->index[n-1]=n-1;//Добавление нового индекса
            l->value[l->index[i]]=n2;//Изменение индекса
        }
    }
    return l;//Вернуть список
}

List* addToList(List *l, int &n){//Функция дублирования элемента если равен особому числу
    int v=5;//Особое число
    int f=0;//Число для сравнения с особым числом
    int k=0,j=0;//Счётчики
    int g=n;//Сохранение длины списка
    for (int i=0;i<n;i++){//Цикл для нахождения новой длины списка
        f=l->value[l->index[i]];//Присваивание числа для сравнения с особым числом
        k++;//Увеличение длины массива
        if (f==v){//Сравнения с особым числом
            k++;//Увеличение длины массива
        }
    }
    int arr3[k];//Создание нового статического массива
    for (int i=0;i<k;i++){//Цикл для заполнения массива
        arr3[i]=l->value[l->index[j]];//Добавление элемента в массив
        if (l->value[l->index[j]]==v){//Если элемент списка равен особому числу
            i++;//Переход к следующему элементу массива
            arr3[i]=v;//Добавление элемента в массив
        }
        j++;//Переход к следующему элементу списка
    }
    for (int i=0;i<k;i++){//Цикл для изменения элементов списка
        if (i<g){//Если меньше старой длины
            l->value[l->index[i]]=arr3[i];//Перезапись элемента
        }
        else if (i>=g){//Если больше новой длины
            l->index[i]=i;//Добавление нового индекса
            l->value[l->index[i]]=arr3[i];//Добавление новго элемента
            n++;//Увеличение длины списка
        }
    }
    return l;//Вернуть список
}

void printList(List *l,int n){//Функция вывода
    if (l==NULL)return;//Закончить если пусто
    for (int i=0;i<n;i++){//Цикл вывода элементов
        cout<<l->value[l->index[i]]<<' ';//Вывести элемент списка
    }
    delete l;//Удалить список
}

int main()
{
    int arr[5]={3,5,7,2,4};//Статический массив
    int arr1[5]={1,2,3,4,5};//Вспомогательный статический массив с индексами
    int a=0;//Индекс первого элемента
    int n=5;//Число элементов
    List *l=arrToList(arr,arr1, n,a);//Функция создания списка
    int t=2;//Количество новых чисел
    while(t!=0){//Цикл добавления элемента в начало
        l=addToLists(l,n);//Функция добавления элемента в начало и конец
        t--;//Уменьшение количества новых чисел
    }
    t=2;//Количество новых чисел
    while(t!=0){//Цикл добавления элемента в конец
        l=addToListf(l,n);//Функция добавления элемента в начало и конец
        t--;//Уменьшение количества новых чисел
    }
    l=addToList(l,n);//Функция дублирования элемента если равен особому числу
    printList(l,n);//Функция вывода
}