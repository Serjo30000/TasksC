#include<iostream>

using namespace std;
//Автор: Моисеенко Сергей Дата: 26.03.2022
void funmn(int n,int *P, int *mP){//Функция заполнения коэффициентов
    for (int i=0;i<n;i++){//Цикл заполнения коэффициентов
        mP[i]=P[i];//Заполнение коэффициентов
    }
}

void funmaxnminn(int n1,int n2,int &maxn,int &minn){//Функция для определения максимального и минимального количества коэффициентов
    if (n1>=n2){//Условие для максимальноого количества коэффициентов у n1
        maxn=n1;//Присвоение максимального количества коэффициентов
        minn=n2;//Присвоение минимального количества коэффициентов
    }
    else{//Условие для максимального количества коэффициентов у n2
        maxn=n2;//Присвоение максимального количества коэффициентов
        minn=n1;//Присвоение минимального количества коэффициентов
    }
}

void funmaxP1minP2(int n1,int n2,int *mP1,int *mP2,int *maxP1,int *minP2){//Функция заполнения наибольшего и наименьшего многочлена
    if (n1>=n2){//Заполнение массива с максимальным количеством коэффициентов у mP1
        for (int i=0;i<n1;i++){//Цикл заполнения массива с максимальным количеством коэффициентов
            maxP1[i]=mP1[i];//Заполнение массива с максимальным количеством коэффициентов
        }
        for (int i=0;i<n2;i++){//Цикл заполнения массива с минимальным количеством коэффициентов
            minP2[i]=mP2[i];//Заполнение массива с минимальным количеством коэффициентов
        }
    }
    else{//Заполнение массива с максимальным количеством коэффициентов у mP2
        for (int i=0;i<n2;i++){//Цикл заполнения массива с максимальным количеством коэффициентов
            maxP1[i]=mP2[i];//Заполнение массива с максимальным количеством коэффициентов
        }
        for (int i=0;i<n1;i++){//Цикл заполнения массива с минимальным количеством коэффициентов
            minP2[i]=mP1[i];//Заполнение массива с минимальным количеством коэффициентов
        }
    }
}

void funsum(int maxn,int minn,int *maxP1,int *minP2,int *mP3){//Функция суммы многочленов
    for (int i=0;i<maxn;i++){//Цикл суммы многочленов
        if (minn>i){//Условие для суммы
            mP3[i]=maxP1[i]+minP2[i];//Сумма коэффициентов многочленов
        }
        else{//Условие для заполнения оставшихся коэффициентов
            mP3[i]=maxP1[i];//Заполнение коэффициентов многочленов
        }
    }
}

void funcom(int maxn,int minn,int *maxP1,int *minP2,int *mP4){//Функция для умножения многочленов
    for (int i=0;i<maxn;++i){//Цикл для перебора многочлена с наибольшим количеством коэффициентов
        for (int j=0;j<minn;++j){//Цикл для перебора многочлена с наименьшим количеством коэффициентов
            mP4[i+j]+=maxP1[i]*minP2[j];//Получение значения для коэффициента многочлена
        }
    }
}

int main(){
    int n1=5;//Количество коэффициентов у первого многочлена
    int P1[5]={3,7,5,1,9};//Массив для первого многочлена
    int mP1[5];//Копирование массива первого многочлена
    funmn(n1,P1,mP1);//Функция заполнения коэффициентов
    cout<<"Первый многочлен:"<<"\n";
    for (int i=0;i<n1;i++){//Цикл вывода коэффициентов первого многочлена
        cout<<"x["<<i<<"]="<<mP1[i]<<' ';//вывода коэффициентов первого многочлена
    }
    cout<<"\n";
    int n2=3;//Количество коэффициентов у второго многочлена
    int P2[3]={9,3,7};//Массив для второго многочлена
    int mP2[3];//Копирование массива второго многочлена
    funmn(n2,P2,mP2);//Функция заполнения коэффициентов
    cout<<"Второй многочлен:"<<"\n";
    for (int i=0;i<n2;i++){//Цикл вывода коэффициентов второго многочлена
        cout<<"x["<<i<<"]="<<mP2[i]<<' ';//вывода коэффициентов второго многочлена
    }
    cout<<"\n";
    int maxn=0;//Максимальное количество коэффициентов
    int minn=0;//Минимальное количество коэффициентов
    funmaxnminn(n1,n2,maxn,minn);//Функция для определения максимального и минимального количества коэффициентов
    int maxP1[maxn];//Создание массива с максимальным количеством коэффициентов
    int minP2[minn];//Создание массива с минимальным количеством коэффициентов
    int mP3[maxn];//Создание массива суммы двух многочленов
    funmaxP1minP2(n1,n2,mP1,mP2,maxP1,minP2);//Функция заполнения наибольшего и наименьшего многочлена
    funsum(maxn,minn,maxP1,minP2,mP3);//Функция суммы многочленов
    cout<<"Сумма многочленов:"<<"\n";
    cout<<"P=";
    for (int i=0;i<maxn;i++){//Цикл вывода массива суммы многочленов
        if (mP3[i]!=0){//Условие для исключения нулевых значений
            if (i!=0 and mP3[i]>=0){//Условие для написания плюса
                cout<<"+";//Вывод плюса
            }
            cout<<mP3[i];//Вывод коэффициента
            if (i!=0){//Условие вывода степени
                cout<<"*(x**"<<i<<")";//Вывод степени
            }
        }
    }
    cout<<"\n";
    int N=maxn+minn-1;//Длина массива для умножения многочленов
    int mP4[N];//Создание массива для умножения многочленов
    for (int i=0;i<N;i++){//Цикл обнуления массива для умножения многочленов
       mP4[i]=0;//Обнуление коэффициента
    }
    funcom(maxn,minn,maxP1,minP2,mP4);//Функция для умножения многочленов
    cout<<"Произведение многочленов:"<<"\n";
    cout<<"P=";
    for (int i=0;i<N;i++){//Цикл вывода массива умножения многочленов
        if (mP4[i]!=0){//Условие для исключения нулевых значений
            if (i!=0 and mP4[i]>=0){//Условие для написания плюса
                cout<<"+";//Вывод плюса
            }
            cout<<mP4[i];//Вывод коэффициента
            if (i!=0){//Условие вывода степени
                cout<<"*(x**"<<i<<")";//Вывод степени
            }
        }
    }
    cout<<"\n";
}