#include <iostream>

using namespace std;
//Автор: Моисеенко Сергей Дата: 26.03.2022
int fun(int &n, int N, int M, int arr[5][6]){//Функция нахождения частей бумаги
    int f=0;//Флаг для нахождения частей бумаги
    int arr1[5][6];//Копирование массива
    for (int i=0;i<N;i++){//Цикл копирования массива
        for(int j=0;j<M;j++){
            arr1[i][j]=arr[i][j];//Внесение значения в новый массив
        }
    }
    for (int i=0;i<N;i++){
        for(int j=0;j<M;j++){//Цикл для нахождения неоконченных разрезов
            if (arr1[i][j]==1 and j>0 and j<M-1 and arr1[i][j+1]==0){//Условие для нижних центральных разрезов
                if (arr1[i-1][j]==0 and arr1[i-1][j-1]==0 and arr1[i-1][j+1]==0 and arr1[i][j-1]==0){//Условия для обнуления
                       arr1[i][j]=0;//Обнуление координаты разреза
                }
            }
            else if (arr1[i][j]==1 and j==0 and arr1[i][j+1]==0){//Условие для нижнего левого разреза
                if (arr1[i-1][j]==0 and arr1[i-1][j+1]==0){//Условия для обнуления
                    arr1[i][j]=0;//Обнуление координаты разреза
                }
            }
            else if (arr1[i][j]==1 and j==M-1 and arr1[i][j+1]==0){//Условие для нижнего правого разреза
                if (arr1[i-1][j]==0 and arr1[i-1][j-1]==0 and arr1[i][j-1]==0){//Условия для обнуления
                    arr1[i][j]=0;//Обнуление координаты разреза
                }
            }
        }
    }
    for (int i=0;i<N;i++){//Цикл нахождения частей бумаги
        for(int j=0;j<M;j++){
            if (arr1[i][j]==1){//Условие для обнуления флага
                f=0;//Обнуление флага
            }
            else if (i==0 and j==0){//Условие для верхней левой координаты
                if (arr1[i][j+1]==1 and arr1[i+1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
                else if (arr1[i][j+1]==0 and arr1[i+1][j]==0){//Условие для продолжения поиска разрезанной части бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=1;//Продолжить поиск разрезанной части бумаги
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
            }
            else if (i==N-1 and j==0){//Условие для нижней левой координаты
                if (arr1[i][j+1]==1 and arr1[i-1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
            }
            else if (i==0 and j==M-1){//Условие для верхней правой координаты
                if (arr1[i][j-1]==1 and arr1[i+1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=0;//Обнуление флага
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=0;//Обнуление флага
                }
            }
            else if (i==N-1 and j==M-1){//Условие для нижней правой координаты
                if (arr1[i][j-1]==1 and arr1[i-1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=0;//Обнуление флага
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=0;//Обнуление флага
                }
            }
            else if (j==0 and i>0 and i<N-1){//Условие для левой стороны
                if (arr1[i-1][j]==1 and arr1[i+1][j]==1 and arr1[i][j+1]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
                else if (arr1[i+1][j]==0 and arr1[i][j+1]==0){//Условие для продолжения поиска разрезанной части бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=1;//Продолжить поиск разрезанной части бумаги
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
            }
            else if (i==0 and j>0 and j<M-1){//Условие для верхней стороны
                if (arr1[i][j-1]==1 and arr1[i][j+1]==1 and arr1[i+1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
                else if (arr1[i+1][j]==0 and arr1[i][j+1]==0){//Условие для продолжения поиска разрезанной части бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=1;//Продолжить поиск разрезанной части бумаги
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
            }
            else if (j==M-1 and i>0 and i<N-1){//Условие для правой стороны
                if (arr1[i][j-1]==1 and arr1[i-1][j]==1 and arr1[i+1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=0;//Обнуление флага
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=0;//Обнуление флага
                }
            }
            else if (i==N-1 and j>0 and j<M-1){//Условие для нижней стороны
                if (arr1[i][j-1]==1 and arr1[i][j+1]==1 and arr1[i-1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
            }
            else{//Условие для центра
                if (arr1[i][j-1]==1 and arr1[i][j+1]==1 and arr1[i-1][j]==1 and arr1[i+1][j]==1 and f==0){//Условие для добавления разрезанной части бумаги
                    n++;//Добавить часть бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
                else if (arr1[i+1][j]==0 and arr1[i][j+1]==0){//Условие для продолжения поиска разрезанной части бумаги
                    arr1[i][j]=1;//Считать элемент разрезанным
                    f=1;//Продолжить поиск разрезанной части бумаги
                }
                else{//Условие для разрезания элемента, чтобы сузить бумагу
                    arr1[i][j]=1;//Считать элемент разрезанным
                }
            }
        }
    }

    if (n>1){//Условие вывода для бумаги с разрезами
        return n;//Вывод значения
    }
    else{//Условие вывода для бумаги без разрезов
        n=1;//Бумага состоит из одной части
        return n;//Вывод значения
    }
}

int main()
{
    int N=5,M=6;//Размеры бумаги
    int n=0;//Количество кусков бумаги
    int arr[5][6]={{0,0,0,0,0,0},{1,1,1,1,1,1},{0,0,1,0,0,0},{0,0,0,1,0,0},{0,0,1,0,0,0}};//Массив со значениями 0-бумага, 1-разрез
    for (int i=0;i<N;i++){//Цикл вывода бумаги с её разрезами
        for(int j=0;j<M;j++){
            cout<<arr[i][j]<<' ';//Вывод значений массива
        }
        cout<<"\n";
    }
    cout<<"Количесво частей у бумаги: "<<fun(n,N,M,arr);//Функция нахождения частей бумаги
}
