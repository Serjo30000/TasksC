#include <iostream>

using namespace std;

//Автор: Моисеенко Сергей ИФСТ-15 Дата: 07.03.2022

void List(int n, int *arr, int arr1[][2]){//Функция создания списка
    for(int i=0;i<100;i++){//Обнуление всех элементов
		arr1[i][0]=0;//Обнуление значения
		arr1[i][1]=0;//Обнуление индекса
	}
	for(int i=0;i<n;i++){//Цикл внесения элементов
	    arr1[i][0]=arr[i];//Внесение значения
	    arr1[i][1]=i+1;//Внесение индекса
	}
}

void addToLists(int arr1[][2], int &n){//Функция добавления элемента в начало
    int g=0,k=0;//Элементы для замены
    for (int i=0;i<n;i++){//Цикл для добавления новых элементов в начало
        if (i==0){//Добавление новых элементов в начало
            int n1=5;//Новое значение
            n++;//Увеличение размера списка
            arr1[n-1][1]=n;//Добавление нового индекса
            g=arr1[i][0];//Сохранение старого значения
            arr1[i][0]=n1;//Изменение значения
        }
        k=arr1[arr1[i][1]][0];//Сохранение старого значения
        arr1[arr1[i][1]][0]=g;//Изменение значения
        g=k;//Сохранение старого значения
    }
}

void addToListf(int arr1[][2], int &n){//Функция добавления элемента в конец
    n++;//Увеличение размера списка
    for (int i=0;i<n;i++){//Цикл для добавления новых элементов в конец
        if (i==n-1){//Добавление нового значения в конец
            int n2=9;//Новое значение
            arr1[n-1][1]=n;//Добавление нового индекса
            arr1[i][0]=n2;//Добавление нового значения
        }
    }
}

void addToList(int arr1[][2], int &n){//Функция дублирования элемента если равен особому числу
    int v=5;//Особое число
    int f=0;//Число для сравнения с особым числом
    int k=0,j=0;//Счётчики
    int g=n;//Сохранение длины списка
    for (int i=0;i<n;i++){//Цикл для нахождения новой длины списка
        f=arr1[i][0];//Присваивание числа для сравнения с особым числом
        k++;//Увеличение длины массива
        if (f==v){//Сравнения с особым числом
            k++;//Увеличение длины массива
        }
    }
    int arr3[k];//Создание нового статического массива
    for (int i=0;i<k;i++){//Цикл для заполнения массива
        arr3[i]=arr1[j][0];//Добавление элемента в массив
        if (arr1[j][0]==v){//Если элемент списка равен особому числу
            i++;//Переход к следующему элементу массива
            arr3[i]=v;//Добавление элемента в массив
        }
        j++;//Переход к следующему элементу списка
    }
    for (int i=0;i<k;i++){//Цикл для изменения элементов списка
        if (i<g){//Если меньше старой длины
            arr1[i][0]=arr3[i];//Перезапись значения
        }
        else if (i>=g){//Если больше новой длины
            arr1[i][1]=i+1;//Добавление нового индекса
            arr1[i][0]=arr3[i];//Добавление новго значения
            n++;//Увеличение длины списка
        }
    }
}

void printList(int n, int arr1[][2]){//Функция вывода
    if (arr1==NULL)return;//Закончить если пусто
    for(int i=0;i<n-1;i++){//Цикл вывода элементов
	    if (i==0){//Условие для начального элемента списка
	        cout<<arr1[0][0]<<' ';//Вывести начальный элемент списка
	        arr1[0][0]=0;//Обнуление начального значения
	    }
	    cout<<arr1[arr1[i][1]][0]<<' ';//Вывести элемент списка
	    arr1[arr1[i][1]][0]=0;//Обнуление значения
	    arr1[i][1]=0;//Обнуление индекса
	}
}

int main()
{
    int n=5;//Число элементов
    int arr[5]={3,5,6,7,8};//Статический массив
    int arr1[100][2];//Вспомогательный статический массив с индексами
    List(n,arr,arr1);//Функция создания списка
    int t=2;//Количество новых чисел
    while(t!=0){//Цикл добавления элемента в начало
        addToLists(arr1,n);//Функция добавления элемента в начало и конец
        t--;//Уменьшение количества новых чисел
    }
    t=2;//Количество новых чисел
    while(t!=0){//Цикл добавления элемента в конец
        addToListf(arr1,n);//Функция добавления элемента в начало и конец
        t--;//Уменьшение количества новых чисел
    }
    addToList(arr1,n);//Функция дублирования элемента если равен особому числу
    printList(n,arr1);//Функция вывода
}
